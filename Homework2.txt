JSON
 4. Создать внешний репозиторий c названием JSON: New->Create->Repository name(JSON)->checkbox(Add a README file)->Create repository->Code->copy "https";
 5. Клонировать репозиторий JSON на локальный компьютер: Open Gitbash-> git clone "https";
 6. Внутри локального JSON создать файл “new.json”: touch new.json;
 7. Добавить файл под гит: git add;
 8. Закоммитить файл: git commit -m "Add new.json";
 9. Отправить файл на внешний GitHub репозиторий: git push;
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON: vim new.json->update file->esc->:wq;
 11. Отправить изменения на внешний репозиторий: git commit -am "Updated new.json", git push;
 12. Создать файл preferences.json: > preferences.json;
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON: vim preferences.json->update file->esc->:wq;
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON:vim skills.json->update file->esc->:wq;
 15. Отправить сразу 2 файла на внешний репозиторий. git add . , git commit -m "Updated preferences.json and skill.json", git push;
 16. На веб интерфейсе создать файл bug_report.json: Add file -> Create new file -> write the file name (bug_report.json);
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Scroll down -> Commit changes;
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON: Click on the file and update;
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Scroll down -> Commit changes;
 20. Синхронизировать внешний и локальный репозиторий JSON: git fetch, git pull;

XML
 21. Создать внешний репозиторий c названием XML: New->Create->Repository name(XML)->checkbox(Add a README file)->Create repository->Code->copy "https";
 22. Клонировать репозиторий XML на локальный компьютер: Open Gitbash-> git clone "https";
 23. Внутри локального XML создать файл “new.xml”: > new.xml;
 24. Добавить файл под гит: git add;
 25. Закоммитить файл: git commit -m "Add new.xml";
 26. Отправить файл на внешний GitHub репозиторий: git push;
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML: vim new.xml->update file->esc->:wq;
 28. Отправить изменения на внешний репозиторий: git commit -am "Updated new.xml", git push;
 29. Создать файл preferences.xml: > preferences.xml;
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML: vim preferences.xml->update file->esc->:wq;
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML: vim skills.xml->update file->esc->:wq;
 32. Сделать коммит в одну строку: git add ., git commit -m "updated preferences.xml and skills.xml";
 33. Отправить сразу 2 файла на внешний репозиторий: git push; 
 34. На веб интерфейсе создать файл bug_report.xml: Add file -> Create new file -> write the file name (bug_report.xml);
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Scroll down -> Commit changes;
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML: Click on the file and update;
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Scroll down -> Commit changes;
 38. Синхронизировать внешний и локальный репозиторий XML: git fetch, git pull;

TXT
 1. Создать внешний репозиторий c названием TXT: : New->Create->Repository name(TXT)->checkbox(Add a README file)->Create repository->Code->copy "https";
 2. Клонировать репозиторий TXT на локальный компьютер: Open Gitbash-> git clone "https";
 3. Внутри локального TXT создать файл “new.txt”: > new.txt;
 4. Добавить файл под гит: git add;
 5. Закоммитить файл: git commit -m "Add new.txt";
 6. Отправить файл на внешний GitHub репозиторий: git push;
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT: vim new.txt->update file->esc->:wq;
 8. Отправить изменения на внешний репозиторий: git commit -am "Updated new.txt", git push;
 9. Создать файл preferences.txt: > preferences.txt;
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT: vim preferences.txt->update file->esc->:wq;
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT: vim skills.txt->update file->esc->:wq;
 12. Сделать коммит в одну строку: git add ., git commit -m "updated preferences.xml and skills.xml";
 13. Отправить сразу 2 файла на внешний репозиторий: git push;
 14. На веб интерфейсе создать файл bug_report.txt: Add file -> Create new file -> write the file name (bug_report.txt);
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Scroll down -> Commit changes;
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT: Click on the file and update;
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Scroll down -> Commit changes;
 18. Синхронизировать внешний и локальный репозиторий TXT: git fetch, git pull;